{"version":3,"sources":["webpack://gatsby-starter-default/./src/components/seo.js","webpack://gatsby-starter-default/./src/pages/page-2.js"],"names":["SEO","description","meta","title","site","useStaticQuery","metaDescription","siteMetadata","Helmet","titleTemplate","name","content","property","author","concat","defaultProps","props","t","useTranslation","Trans","path","Link","to"],"mappings":"uKAYA,SAASA,EAAT,GAA0C,IAA5BC,EAA2B,EAA3BA,YAAaC,EAAc,EAAdA,KAAMC,EAAQ,EAARA,MACxBC,GAAQC,oBAAe,YAAvBD,KAcDE,EAAkBL,GAAeG,EAAKG,aAAaN,YAEzD,OACE,gBAAC,EAAAO,OAAD,CACEL,MAAOA,EACPM,cAAa,QAAUL,EAAKG,aAAaJ,MACzCD,KAAM,CACJ,CACEQ,KAAK,cACLC,QAASL,GAEX,CACEM,SAAS,WACTD,QAASR,GAEX,CACES,SAAS,iBACTD,QAASL,GAEX,CACEM,SAAS,UACTD,QAAQ,WAEV,CACED,KAAK,eACLC,QAAQ,WAEV,CACED,KAAK,kBACLC,QAASP,EAAKG,aAAaM,QAE7B,CACEH,KAAK,gBACLC,QAASR,GAEX,CACEO,KAAK,sBACLC,QAASL,IAEXQ,OAAOZ,KAKfF,EAAIe,aAAe,CACjBb,KAAM,GACND,YAAY,IAUd,O,qFCzDA,UAlBmB,SAAAe,GAAU,IACnBC,GAAMC,sBAAND,EACR,OACE,gBAAC,IAAD,KACE,gBAAC,IAAD,CAAKd,MAAOc,EAAE,cACd,0BACE,gBAAC,EAAAE,MAAD,kBAEF,yBACE,gBAAC,EAAAA,MAAD,0BADF,KACqCH,EAAMI,KAD3C,KAGA,gBAAC,EAAAC,KAAD,CAAMC,GAAG,KACP,gBAAC,EAAAH,MAAD","file":"component---src-pages-page-2-js-02dc1f9136165369e76b.js","sourcesContent":["/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {Helmet} from 'gatsby-plugin-react-i18next';\nimport {useStaticQuery, graphql} from 'gatsby';\n\nfunction SEO({description, meta, title}) {\n  const {site} = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  );\n\n  const metaDescription = description || site.siteMetadata.description;\n\n  return (\n    <Helmet\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription\n        },\n        {\n          property: `og:title`,\n          content: title\n        },\n        {\n          property: `og:description`,\n          content: metaDescription\n        },\n        {\n          property: `og:type`,\n          content: `website`\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author\n        },\n        {\n          name: `twitter:title`,\n          content: title\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription\n        }\n      ].concat(meta)}\n    />\n  );\n}\n\nSEO.defaultProps = {\n  meta: [],\n  description: ``\n};\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired\n};\n\nexport default SEO;\n","// i18next-extract-mark-ns-start page-2\n\nimport { graphql } from 'gatsby'\nimport React from 'react'\nimport Layout from '../layout'\nimport SEO from '../components/seo'\nimport { Link, useTranslation, Trans } from 'gatsby-plugin-react-i18next'\n\nconst SecondPage = props => {\n  const { t } = useTranslation()\n  return (\n    <Layout>\n      <SEO title={t('Page two')} />\n      <h1>\n        <Trans>Page two</Trans>\n      </h1>\n      <p>\n        <Trans>Welcome to page 2</Trans> ({props.path})\n      </p>\n      <Link to='/'>\n        <Trans>Go back to the homepage</Trans>\n      </Link>\n    </Layout>\n  )\n}\n\nexport default SecondPage\n\nexport const query = graphql`\n  query($language: String!) {\n    locales: allLocale(\n      filter: { ns: { in: [\"common\", \"page-2\"] }, language: { eq: $language } }\n    ) {\n      edges {\n        node {\n          ns\n          data\n          language\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}